1)Создать двух пользователей (с помощью метода User.objects.create_user('username')).

Bob = User.objects.create_user('Bob')
Anna = User.objects.create_user('Anna')

2)Создать два объекта модели Author, связанные с пользователями.

Author.objects.create(user = User.objects.get(username='Bob'))
Author.objects.create(user = User.objects.get(username='Anna'))

3)Добавить 4 категории в модель Category.

Category.objects.create(name_category = 'Спорт')
Category.objects.create(name_category = 'Музыка')
Category.objects.create(name_category = 'Кино')
Category.objects.create(name_category = 'Наука')

4)Добавить 2 статьи и 1 новость.

Post.objects.create(author = Author(pk=1), post_type = Post.article, title = "Статья по теме спорт", text = "Статья про спорт")
Post.objects.create(author = Author(pk=2), post_type = Post.article, title = "Музыкальная статья", text = "Статья про музыку")
Post.objects.create(author = Author(pk=1), post_type = Post.news, title = "новость про Спорт", text = "Новость про Спорт")

5)Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий).
PostCategory.objects.create(post_id=1, category_id = 1)
PostCategory.objects.create(post_id=2, category_id = 2)
PostCategory.objects.create(post_id=3, category_id = 3)
PostCategory.objects.create(post_id=3, category_id = 4)

6)Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий).
Comment.objects.create(post = Post.objects.get(pk=1), user = User.objects.get(username = 'Bob'), text = "Первый текст комментария")
Comment.objects.create(post = Post.objects.get(pk=2), user = User.objects.get(username = 'Anna'), text = "Второй текст комментария")
Comment.objects.create(post = Post.objects.get(pk=3), user = User.objects.get(username = 'Bob'), text = "Третий текст комментария")
Comment.objects.create(post = Post.objects.get(pk=3), user = User.objects.get(username = 'Anna'), text = "Четвертый текст комментария")

7)Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов.
    Comment.objects.get(pk=1).like()
    Comment.objects.get(pk=2).dislike()
    Comment.objects.get(pk=3).dislike()
    Comment.objects.get(pk=4).like()
    Post.objects.get(pk=1).like()
    Post.objects.get(pk=2).like()
    Post.objects.get(pk=3).dislike()
    Post.objects.get(pk=2).dislike()

8)Обновить рейтинги пользователей.
    Author.objects.get(pk=1).update_rating()
    Author.objects.get(pk=2).update_rating()

9)Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта).
Author.objects.all().order_by('-rating').values('user', 'rating')[0]

10)Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье.
Post.objects.all().order_by('rating').values('created', 'author', 'rating', 'title')[0]
top_rate = Post.objects.all().order_by('rating')[0]
 top_rate.preview()

11)Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье.
Comment.objects.all().values('created', 'user', 'rating', 'text')
